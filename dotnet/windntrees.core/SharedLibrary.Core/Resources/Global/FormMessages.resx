<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="AddD" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="Add" xml:space="preserve">
    <value>Add</value>
  </data>
  <data name="AscendingD" xml:space="preserve">
    <value>display records in increasing order i.e. from lower to higher order</value>
  </data>
  <data name="Ascending" xml:space="preserve">
    <value>Ascending</value>
  </data>
  <data name="Cancel" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="CaptchaD" xml:space="preserve">
    <value>Enter captcha text here.</value>
  </data>
  <data name="CaptchaErrorD" xml:space="preserve">
    <value>Captcha input does not match the image displayed.</value>
  </data>
  <data name="CaptchaImageD" xml:space="preserve">
    <value>Captcha text - click to change.</value>
  </data>
  <data name="Captcha" xml:space="preserve">
    <value>Captcha text</value>
  </data>
  <data name="Cell" xml:space="preserve">
    <value>Cell</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="DeleteD" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="Delete" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="DescendingD" xml:space="preserve">
    <value>display records in decreasing order i.e. from higher to lower order</value>
  </data>
  <data name="Descending" xml:space="preserve">
    <value>Descending</value>
  </data>
  <data name="DisplayingPage" xml:space="preserve">
    <value>Displaying Page</value>
  </data>
  <data name="Done" xml:space="preserve">
    <value>Done</value>
  </data>
  <data name="Download" xml:space="preserve">
    <value>Download</value>
  </data>
  <data name="DownloadD" xml:space="preserve">
    <value>download content</value>
  </data>
  <data name="EditD" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Edit" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="Email" xml:space="preserve">
    <value>Email</value>
  </data>
  <data name="EndDateD" xml:space="preserve">
    <value>end date</value>
  </data>
  <data name="EndDate" xml:space="preserve">
    <value>E. Date</value>
  </data>
  <data name="EndTimeD" xml:space="preserve">
    <value>end time</value>
  </data>
  <data name="EndTime" xml:space="preserve">
    <value>E. Time</value>
  </data>
  <data name="Failed" xml:space="preserve">
    <value>Failed</value>
  </data>
  <data name="Female" xml:space="preserve">
    <value>Female</value>
  </data>
  <data name="FieldDescriptionD" xml:space="preserve">
    <value>description</value>
  </data>
  <data name="FieldDescription" xml:space="preserve">
    <value>Description</value>
  </data>
  <data name="FieldNameD" xml:space="preserve">
    <value>name</value>
  </data>
  <data name="FieldName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="FieldNewDetailD" xml:space="preserve">
    <value>new detail</value>
  </data>
  <data name="FieldNewDetail" xml:space="preserve">
    <value>New Detail</value>
  </data>
  <data name="Found" xml:space="preserve">
    <value>Found</value>
  </data>
  <data name="Here" xml:space="preserve">
    <value>here</value>
  </data>
  <data name="ImageUpload" xml:space="preserve">
    <value>Upload Image</value>
  </data>
  <data name="ImageViewForm" xml:space="preserve">
    <value>Image View Form</value>
  </data>
  <data name="KeywordD" xml:space="preserve">
    <value>enter keyword here</value>
  </data>
  <data name="Keyword" xml:space="preserve">
    <value>Keyword</value>
  </data>
  <data name="ListSizeD" xml:space="preserve">
    <value>list size</value>
  </data>
  <data name="ListSize" xml:space="preserve">
    <value>List Size</value>
  </data>
  <data name="Male" xml:space="preserve">
    <value>Male</value>
  </data>
  <data name="NewD" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="New" xml:space="preserve">
    <value>New</value>
  </data>
  <data name="NextPage" xml:space="preserve">
    <value>Next</value>
  </data>
  <data name="NoRecord" xml:space="preserve">
    <value>No record found.</value>
  </data>
  <data name="Of" xml:space="preserve">
    <value>Of</value>
  </data>
  <data name="PageSize" xml:space="preserve">
    <value>Page Size</value>
  </data>
  <data name="Phone" xml:space="preserve">
    <value>Phone</value>
  </data>
  <data name="PrevPage" xml:space="preserve">
    <value>Previous</value>
  </data>
  <data name="Print" xml:space="preserve">
    <value>Print</value>
  </data>
  <data name="Records" xml:space="preserve">
    <value>Record(s)</value>
  </data>
  <data name="ReloadD" xml:space="preserve">
    <value>reload records</value>
  </data>
  <data name="Reload" xml:space="preserve">
    <value>Reload</value>
  </data>
  <data name="ReportComputerGen" xml:space="preserve">
    <value>This is computer generated report and not valid for legal purposes.</value>
  </data>
  <data name="Save" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="Saved" xml:space="preserve">
    <value>Saved</value>
  </data>
  <data name="SearchD" xml:space="preserve">
    <value>press to search</value>
  </data>
  <data name="Search" xml:space="preserve">
    <value>Search</value>
  </data>
  <data name="SelectD" xml:space="preserve">
    <value>select from list</value>
  </data>
  <data name="Select" xml:space="preserve">
    <value>Select ...</value>
  </data>
  <data name="SonOrDaughterOf" xml:space="preserve">
    <value>S/D Of</value>
  </data>
  <data name="StartDateD" xml:space="preserve">
    <value>starting date</value>
  </data>
  <data name="StartDate" xml:space="preserve">
    <value>S. Date</value>
  </data>
  <data name="StartTimeD" xml:space="preserve">
    <value>starting time</value>
  </data>
  <data name="StartTime" xml:space="preserve">
    <value>S. Time</value>
  </data>
  <data name="Submit" xml:space="preserve">
    <value>Submit</value>
  </data>
  <data name="TotalPages" xml:space="preserve">
    <value />
  </data>
  <data name="Update" xml:space="preserve">
    <value>Update</value>
  </data>
  <data name="UploadD" xml:space="preserve">
    <value>select and upload content</value>
  </data>
  <data name="UploadFile" xml:space="preserve">
    <value>Select file, only limited size and extension files are allowed.</value>
  </data>
  <data name="UploadImage" xml:space="preserve">
    <value>Select image file, only *.jpg and *.png files are allowed.</value>
  </data>
  <data name="Upload" xml:space="preserve">
    <value>Upload</value>
  </data>
  <data name="UsefulLinksD" xml:space="preserve">
    <value>useful links</value>
  </data>
  <data name="UsefulLinks" xml:space="preserve">
    <value>Useful Links</value>
  </data>
  <data name="VideoUpload" xml:space="preserve">
    <value>Upload Video</value>
  </data>
  <data name="VideoViewForm" xml:space="preserve">
    <value>Video View Form</value>
  </data>
  <data name="ViewImage" xml:space="preserve">
    <value>View Image</value>
  </data>
  <data name="ViewInWindow" xml:space="preserve">
    <value>View New Window</value>
  </data>
  <data name="View" xml:space="preserve">
    <value>View</value>
  </data>
  <data name="ViewVideo" xml:space="preserve">
    <value>View Video</value>
  </data>
  <data name="Welcome" xml:space="preserve">
    <value>Welcome!</value>
  </data>
  <data name="Ok" xml:space="preserve">
    <value>Ok</value>
  </data>
  <data name="HideSearch" xml:space="preserve">
    <value>Hide Search</value>
  </data>
  <data name="ShowSearch" xml:space="preserve">
    <value>Show Search</value>
  </data>
  <data name="RecordExists" xml:space="preserve">
    <value>Record exists already.</value>
  </data>
</root>