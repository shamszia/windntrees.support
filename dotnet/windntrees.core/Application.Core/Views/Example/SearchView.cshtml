<div name="HTMLCode">
    @Html.AntiForgeryToken()
    <section id="htmlcode-section">
        <section id="observer-section" data-bind="with: getObserverObject()">
            <section class="observer-section">
                <div class="card">

                    <div class="card-header">
                        <span data-bind="visible: getProcessing()"><i class="fa fa-cog fa-spin fa-2x"></i></span>
                        <span data-bind="if: getResultMessage().length > 0" class="alert"><span data-bind="text: getResultMessage()"></span></span>
                        <div data-bind="if: getErrors().length > 0">
                            <ul class="errorlist" data-bind="foreach: { data: getObservableErrors(), as: 'error' }">
                                <li class="alert"><span data-bind="text: errField"></span> <span data-bind="text: errMessage"></span></li>
                            </ul>
                        </div>
                    </div>

                    <div class="card-body">
                        <div class="table-responsive">
                            <div class="bootstrap-table">
                                <div class="fixed-table-toolbar">
                                    <div class="form-group">
                                        <div class="input-group">
                                            <input class="form-control" data-bind="value: getObservableKeyword()" type="text" placeholder="keyword" />
                                            <span class="input-group-btn">
                                                <button class="btn btn-default" type="button" data-bind="click: function(data,event) { find(1); }">find / load</button>
                                            </span>
                                        </div>
                                    </div>
                                </div>
                                <div class="fixed-table-container">
                                    <div class="fixed-table-header"></div><div class="fixed-table-body">
                                        <table class="table table-hover grid-style-0">
                                            <tr>
                                                <th class="col-5">
                                                    <span title="name">Name</span>
                                                </th>
                                                <th class="col-5">
                                                    <span title="description">Description</span>
                                                </th>
                                                <th class="col-2"> </th>
                                            </tr>
                                            <tbody data-bind="foreach: { data: getObservableRecords(), as: 'record' }">
                                                <tr>
                                                    <td data-bind="text: Name()"></td>
                                                    <td data-bind="text: Description()"></td>
                                                    <td>
                                                        <div class="hidden-phone visible-desktop action-buttons">
                                                            <span><i class="fa fa-edit text-success"></i><span> edit </span></span>
                                                            <span><i class="fa fa-times text-danger"></i><span> delete </span></span>
                                                        </div>
                                                    </td>
                                                </tr>
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="clearfix"></div>
                        <div class="form-group form-row">
                            <div class="col-6 order-0">
                                <div class="input-group justify-content-start">
                                    <span class="input-group-prepend">
                                        <span class="input-group-text">List Size</span>
                                    </span>
                                    <select class="form-control col-2" data-bind="value: getObservableListSize(), event: {change: function() { $parents[0].fillRecords(1); }}" style="width:auto;">
                                        <option value="10">10</option>
                                        <option value="20">20</option>
                                        <option value="50">50</option>
                                        <option value="100">100</option>
                                    </select>
                                </div>
                            </div>
                            <div class="col-6 order-1">
                                <div class="input-group justify-content-end" data-bind="if: getListNavigator().calculateTotalPages() > 1">
                                    <span class="input-group-prepend" data-bind="css: {disabled: getCurrentList() === 1}"><a href="#" data-bind="click: function(){ if (getCurrentList() > 1) {$parents[0].fillRecords(getCurrentList() - 1); } }"><span class="input-group-text">prev</span></a></span>
                                    <span class="input-group-append" data-bind="css: {disabled: getCurrentList() === getListNavigator().calculateTotalPages()}"><a href="#" data-bind="click: function(){ if (getCurrentList() < getListNavigator().calculateTotalPages()) { $parents[0].fillRecords(getCurrentList() + 1); } }"><span class="input-group-text">next</span></a></span>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <button class="btn btn-default" type="button" data-bind="click: function(data,event) { displayProcessingActivity(); }">Display Processing Activity</button>
                    <button class="btn btn-default" type="button" data-bind="click: function(data,event) { displayClearActivity(); }">Display Clear Activity</button>
                    <button class="btn btn-default" type="button" data-bind="click: function(data,event) { clearListRecordsView(); }">Clear Records</button>
                </div>
            </section>
        </section>
    </section>
</div>


@section scripts {

    <script src="~/lib/knockoutjs/knockout-3.4.2.js"></script>
    <script src="~/lib/knockoutjs.validation/knockout.validation.min.js"></script>
    <script src="~/lib/windntrees/windntrees.min.js"></script>

    <script src="~/js/models/Color.js"></script>

    <script type="text/javascript">
        /**
         * EditView reference program implementation.
         *
         */
        var colors = new SearchView({
            'uri': '/color',
            'observer': new SearchObserver({ 'contentType': new Color({}), 'messages': new MessageRepository() })
        });

        $(function () {

            ko.validation.init({
                insertMessages: false,
                decorateElement: true,
                errorElementClass: 'error'
            });

            try {

                ko.applyBindings(colors);
            }
            catch (e) {

                console.log(e.message);
            }

            colors.find(1);
        });
    </script>
}
