<section class="observer-section">
    <div class="card">
        @Html.AntiForgeryToken()
        <div class="card-header">
            <span data-bind="visible: getProcessing()"><i class="fa fa-cog fa-spin fa-2x"></i></span>
            <span data-bind="if: getResultMessage().length > 0" class="alert"><span data-bind="text: getResultMessage()"></span></span>
            <div data-bind="if: getErrors().length > 0">
                <ul class="errorlist" data-bind="foreach: { data: getObservableErrors(), as: 'error' }">
                    <li class="alert"><span data-bind="text: errField"></span> <span data-bind="text: errMessage"></span></li>
                </ul>
            </div>
        </div>

        <div class="card-body">
            <div class="table-responsive">
                <div class="bootstrap-table">
                    <div class="fixed-table-toolbar">
                        <div class="form-group">
                            <div class="input-group">
                                <span class="input-group-btn">
                                    <button class="btn btn-default" type="button" data-bind="click: function(data,event) { resetForm(); }" data-toggle="modal" data-target="#inputForm">new</button>
                                </span>
                                <input class="form-control" data-bind="value: getObservableKeyword()" type="text" placeholder="keyword" />
                                <span class="input-group-btn">
                                    <button class="btn btn-default" type="button" data-bind="click: function(data,event) { find(1); }">find / load</button>
                                </span>
                            </div>
                        </div>
                    </div>
                    <div class="fixed-table-container">
                        <div class="fixed-table-header"></div><div class="fixed-table-body">
                            <table class="table table-hover grid-style-0">
                                <tr>
                                    <th class="col-5">
                                        <span title="name">Name</span>
                                    </th>
                                    <th class="col-5">
                                        <span title="description">Description</span>
                                    </th>
                                    <th class="col-2"> </th>
                                </tr>
                                <tbody data-bind="foreach: { data: getObservableRecords(), as: 'record' }">
                                    <tr>
                                        <td data-bind="text: Name()"></td>
                                        <td data-bind="text: Description()"></td>
                                        <td>
                                            <div class="hidden-phone visible-desktop action-buttons">

                                                <a class="green" href="#" title="edit" data-bind="click: function(data, event) { $parents[0].resetFormForEditing($index); }" data-toggle="modal" data-target="#uploadForm"><i class="fa fa-edit text-success"></i><span> upload </span></a>

                                                <a class="green" href="#" title="edit" data-bind="click: function(data, event) { $parents[0].resetFormForEditing($index); }" data-toggle="modal" data-target="#newContentForm"><i class="fa fa-edit text-success"></i><span> new content </span></a>
                                                <a class="green" href="#" title="edit" data-bind="click: function(data, event) { $parents[0].resetFormForEditing($index); }" data-toggle="modal" data-target="#updateContentForm"><i class="fa fa-edit text-success"></i><span> update content </span></a>

                                                <a class="green" href="#" title="edit" data-bind="click: function(data, event) { $parents[0].resetFormForEditing($index); }" data-toggle="modal" data-target="#inputForm"><i class="fa fa-edit text-success"></i><span> edit </span></a>
                                                <a class="red" href="#" title="delete" data-bind="click: function(data, event) { $parents[0].delete(data); }"><i class="fa fa-times text-danger"></i><span> delete </span></a>
                                            </div>
                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>
                    </div>
                </div>
            </div>
            <div class="clearfix"></div>
            <div class="form-group form-row">
                <div class="col-6 order-0">
                    <div class="input-group justify-content-start">
                        <span class="input-group-prepend">
                            <span class="input-group-text">List Size</span>
                        </span>
                        <select class="form-control col-2" data-bind="value: getObservableListSize(), event: {change: function() { $parents[0].fillRecords(1); }}" style="width:auto;">
                            <option value="10">10</option>
                            <option value="20">20</option>
                            <option value="50">50</option>
                            <option value="100">100</option>
                        </select>
                    </div>
                </div>
                <div class="col-6 order-1">
                    <div class="input-group justify-content-end" data-bind="if: getListNavigator().calculateTotalPages() > 1">
                        <span class="input-group-prepend" data-bind="css: {disabled: getCurrentList() === 1}"><a href="#" data-bind="click: function(){ if (getCurrentList() > 1) { find(getCurrentList() - 1); } }"><span class="input-group-text">prev</span></a></span>
                        <span class="input-group-append" data-bind="css: {disabled: getCurrentList() === getListNavigator().calculateTotalPages()}"><a href="#" data-bind="click: function(){ if (getCurrentList() < getListNavigator().calculateTotalPages()) { find(getCurrentList() + 1); } }"><span class="input-group-text">next</span></a></span>
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="form-group">
        <button class="btn btn-default" type="button" data-bind="click: function(data,event) { displayProcessingActivity(); }">Display Processing Activity</button>
        <button class="btn btn-default" type="button" data-bind="click: function(data,event) { displayClearActivity(); }">Display Clear Activity</button>
        <button class="btn btn-default" type="button" data-bind="click: function(data,event) { clearListRecordsView(); }">Clear Records</button>
    </div>
</section>
<div class="modal fade" id="inputForm" tabindex="-1" role="dialog" aria-labelledby="myModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header form-group form-row">
                <div class="col-10 order-0">
                    <h4 class="modal-title d-flex justify-content-start" id="modalFormLabel">
                        <span data-bind="text: getEditMode() ? getEditModeCaption() : getNewModeCaption()"></span>
                    </h4>
                </div>
                <div class="col-2 order-1">
                    <button type="button" class="close d-flex justify-content-end" data-dismiss="modal">
                        <span aria-hidden="true">×</span><span class="sr-only">close</span>
                    </button>
                </div>
            </div>
            <div class="modal-body form-horizontal" data-bind="with: getObservableFormObject()">
                <div class="form-group form-group-sm">
                    <span data-bind="visible: $parents[0].getFormProcessing()">
                        <i class="fa fa-cog fa-spin fa-2x"></i>
                    </span>
                    <span data-bind="if: $parents[0].getFormResultMessage().length > 0" class="alert">
                        <span data-bind="text: $parents[0].getFormResultMessage()"></span>
                    </span>
                </div>
                <section>
                    <div class="form-group form-group-sm">
                        <div class="col-3">
                            <label class="control-label" for="Name">
                                <span>Name</span>
                            </label>
                            <input data-bind="value: $parent.getEditMode() ? Name : Name" id="Name" type="text"
                                   maxlength="50" placeholder="" class="form-control" /><span class="error"
                                                                                              data-bind="validationMessage: Name"></span>
                        </div>
                        <div class="col-9">
                            <label class="control-label" for="Description">
                                <span>Description</span>
                            </label>
                            <input data-bind="value: $parent.getEditMode() ? Description : Description" id="Description" type="text"
                                   maxlength="200" placeholder="" class="form-control" /><span class="error"
                                                                                               data-bind="validationMessage: Description"></span>
                        </div>
                    </div>
                    <div class="clear-fix">
                    </div>
                </section>
            </div>
            <div class="modal-footer">
                <button class="btn btn-default" type="button" data-bind="click: function(data,event) { displayFormProcessingActivity(); }">Start Processing</button>
                <button class="btn btn-default" type="button" data-bind="click: function(data,event) { displayFormClearActivity(); }">Stop Processing</button>
                <button type="button" id="btnCloseAddForm" class="btn btn-default" data-dismiss="modal">
                    <span>close</span>
                </button>
                <button type="button" data-bind="click: function(data,event) { getEditMode() ? update() : create(); }"
                        id="btnAddEdit" class="btn btn-primary">
                    <span>save</span>
                </button>
            </div>
        </div>
    </div>
</div>

<div id="uploadForm" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="form-group">
                    <div class="col-12">
                        <label class="control-label" for="upload">
                            Upload
                        </label>
                        <form>
                            <input id="uploadType" name="uploadType" type="hidden" value="users" />
                            <input id="updateField" name="updateField" type="hidden" value="ImageFile" />
                            <input id="upload" name="upload" type="file" data-bind="fileUpload: { property: ImageFile }" />
                        </form>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>


<div id="newContentForm" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="__uploadform_newContentForm">
                    <div class="form-row form-group">
                        <div class="col-12">
                            <label class="control-label d-flex align-content-start" for="upload">
                                Upload
                            </label>
                            <div class="input-group d-flex align-content-start">
                                <input class="col-10 form-control form-control-file order-last" id="upload" name="upload" type="file" />
                            </div>
                            <input id="recordid" name="recordid" type="hidden" data-bind="value: $data.getKey()" />
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" data-bind="click: create( { 'target': 'CreateContent', 'form':'__uploadform_newContentForm' })">Save changes</button>
            </div>
        </div>
    </div>
</div>


<div id="updateContentForm" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="exampleModalCenterTitle" aria-hidden="true">
    <div class="modal-dialog modal-dialog-centered" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="exampleModalLongTitle">Modal title</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <form id="__uploadform_updateContentForm">
                    <div class="form-row form-group">
                        <div class="col-12">
                            <label class="control-label d-flex align-content-start" for="upload">
                                Upload
                            </label>
                            <div class="input-group d-flex align-content-start">
                                <input class="col-10 form-control form-control-file order-last" id="upload" name="upload" type="file" />
                            </div>
                            <input id="recordid" name="recordid" type="hidden" data-bind="value: $data.getKey()" />
                        </div>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" data-bind="click: create( { 'target': 'UpdateContent', 'form':'__uploadform_updateContentForm' })">Save changes</button>
            </div>
        </div>
    </div>
</div>

@section scripts {

    <script src="~/lib/knockoutjs/knockout-3.4.2.js"></script>
    <script src="~/lib/knockoutjs.validation/knockout.validation.min.js"></script>
    <script src="~/lib/windntrees/windntrees.min.js"></script>

    <script src="~/js/misc/FileUploadHandler.js" type="text/javascript"></script>

    <script src="~/js/models/Color.js"></script>

    <script type="text/javascript">

        var colors = new CRUDView({
            'uri': '/color',
            'observer': new CRUDObserver({ 'contentType': new Color({}), 'messages': new MessageRepository() })
        });

        colors.getObserverObject().setListSource(colors);

        $(function () {

            ko.validation.init({
                insertMessages: false,
                decorateElement: true,
                errorElementClass: 'error'
            });

            try {

                ko.applyBindings(colors.getObserverObject());
            }
            catch (e) {

                console.log(e.message);
            }

            colors.getObserverObject().Keyword("");

            colors.find(1);
        });
    </script>
}
