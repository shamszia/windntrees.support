@{
    Layout = null;

    var theme = System.Configuration.ConfigurationManager.AppSettings["theme"];
    if (string.IsNullOrEmpty(theme))
    {
        theme = "native";
    }
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <meta name="description" content="">
    <meta name="author" content="Shams Zia">
    <link rel="icon" href="@Url.Content("~/favicon.ico")">

    @Styles.Render(string.Format("~/bundles/{0}/header", theme))
    @Scripts.Render("~/bundles/modernizr")
    @Styles.Render(string.Format("~/content/{0}/bootstrap", theme))
    @Styles.Render(string.Format("~/content/{0}/fonts", theme))
    @Styles.Render(string.Format("~/content/{0}/styles", theme))
    @Styles.Render(string.Format("~/content/{0}/carousel", theme))

    <link rel="shortcut icon" href="@Url.Content("~/content/images/favicon.png")">

    @if (IsSectionDefined("Header"))
    {
        @RenderSection("Header", required: false)
    }
    else
    {
        <title></title>
    }

</head>
<body dir="@Session["bodyDirection"]">
    <!-- WRAPPER -->
    <div class="container-fluid">

        @Html.Partial("_Header")

        @if (IsSectionDefined("PagePath"))
        {
            @RenderSection("PagePath", required: false)
        }
        else
        {
            @Controls.Navs.NavigationComposer.composePathNavigation(Request.Path)
        }

        @if (IsSectionDefined("Authorization"))
        {
            @RenderSection("Authorization", required: false)
        }
        else
        {
            @Html.AntiForgeryToken()
        }

        @if (IsSectionDefined("ContentHeader"))
        {
            @RenderSection("ContentHeader", required: false)
        }

        @RenderBody()

        @if (IsSectionDefined("ContentFooter"))
        {
            @RenderSection("ContentFooter", required: false)
        }
        else
        {

        }
    </div>
    <!-- END WRAPPER -->
    <!-- JAVASCRIPTS -->
    @Html.Partial("_Footer")
    @Html.Partial("_Copyright")

    @Scripts.Render(string.Format("~/bundles/{0}/bootstrap", theme))
    @Scripts.Render("~/Scripts/windntrees.min.js")

    <script type="text/javascript">
        function intialize(repository) {

            ko.validation.init({
                insertMessages: false,
                decorateElement: true,
                errorElementClass: 'error'
            });

            ko.validation.rules['required'].message = '@SharedLibrary.Resources.Global.KOMessages.Required';
            ko.validation.rules['min'].message = '@SharedLibrary.Resources.Global.KOMessages.Min';
            ko.validation.rules['max'].message = '@SharedLibrary.Resources.Global.KOMessages.Max';
            ko.validation.rules['minLength'].message = '@SharedLibrary.Resources.Global.KOMessages.MinLength';
            ko.validation.rules['maxLength'].message = '@SharedLibrary.Resources.Global.KOMessages.MaxLength';
            ko.validation.rules['pattern'].message = '@SharedLibrary.Resources.Global.KOMessages.Pattern';
            ko.validation.rules['step'].message = '@SharedLibrary.Resources.Global.KOMessages.Step';
            ko.validation.rules['email'].message = '@SharedLibrary.Resources.Global.KOMessages.Email';
            ko.validation.rules['date'].message = '@SharedLibrary.Resources.Global.KOMessages.Date';
            ko.validation.rules['dateISO'].message = '@SharedLibrary.Resources.Global.KOMessages.DateISO';
            ko.validation.rules['number'].message = '@SharedLibrary.Resources.Global.KOMessages.Number';
            ko.validation.rules['digit'].message = '@SharedLibrary.Resources.Global.KOMessages.Digit';
            ko.validation.rules['phoneUS'].message = '@SharedLibrary.Resources.Global.KOMessages.PhoneUS';
            ko.validation.rules['equal'].message = '@SharedLibrary.Resources.Global.KOMessages.Equal';
            ko.validation.rules['notEqual'].message = '@SharedLibrary.Resources.Global.KOMessages.NotEqual';

            ko.validation.registerExtenders();

            repository.clean();
            repository.add(new LocaleMessage("form.new.text", '@SharedLibrary.Resources.Global.FormMessages.New'));
            repository.add(new LocaleMessage("form.edit.text", '@SharedLibrary.Resources.Global.FormMessages.Edit'));
            repository.add(new LocaleMessage("form.noRecord.text", '@SharedLibrary.Resources.Global.FormMessages.NoRecord'));
            repository.add(new LocaleMessage("form.found.text", '@SharedLibrary.Resources.Global.FormMessages.Found'));
            repository.add(new LocaleMessage("form.saved.text", '@SharedLibrary.Resources.Global.FormMessages.Saved'));
            repository.add(new LocaleMessage("form.failed.text", '@SharedLibrary.Resources.Global.FormMessages.Failed'));
            repository.add(new LocaleMessage("form.records.text", '@SharedLibrary.Resources.Global.FormMessages.Records'));
            repository.add(new LocaleMessage("form.displayingPage.text", '@SharedLibrary.Resources.Global.FormMessages.DisplayingPage'));
            repository.add(new LocaleMessage("form.of.text", '@SharedLibrary.Resources.Global.FormMessages.Of'));
            repository.add(new LocaleMessage("form.totalPages.text", '@SharedLibrary.Resources.Global.FormMessages.TotalPages'));
            repository.add(new LocaleMessage("form.ok.text", '@SharedLibrary.Resources.Global.FormMessages.Ok'));
            repository.add(new LocaleMessage("standard.alertSure.text", '@SharedLibrary.Resources.Global.StandardMessages.AlertSure'));
            repository.add(new LocaleMessage("standard.processing.text", '@SharedLibrary.Resources.Global.StandardMessages.Processing'));
            repository.add(new LocaleMessage("standard.err.text", '@SharedLibrary.Resources.Global.StandardMessages.Err'));
            repository.add(new LocaleMessage("standard.ok.text", '@SharedLibrary.Resources.Global.StandardMessages.Ok'));
            repository.add(new LocaleMessage("standard.listloadok.text", '@SharedLibrary.Resources.Global.StandardMessages.ListLoadOk'));
            repository.add(new LocaleMessage("standard.listloaderr.text", '@SharedLibrary.Resources.Global.StandardMessages.ListLoadErr'));

            return repository;
        }
    </script>

    @if (IsSectionDefined("Scripts"))
    {
        @RenderSection("Scripts", required: false)
    }
</body>
</html>