@{
    ViewBag.Title = "Login History";
    Layout = "~/Areas/MyAccount/Views/Shared/_Layout.cshtml";
}

@section Header
{
    <title>@LocaleResources.Views.LoginHistory.Index.Page</title>

    <script type="text/html" id="headings">
        <tr>
            <th class="col-4 order-0" scope="col">
                <span class="d-flex align-content-start" title="@LocaleResources.Contents.Account.LoginHistory.LoginTime">@LocaleResources.Contents.Account.LoginHistory.LoginTime</span>
            </th>
            <th class="col-6 order-1" scope="col">
                <span class="d-flex align-content-start" title="@LocaleResources.Contents.Account.LoginHistory.IP">@LocaleResources.Contents.Account.LoginHistory.IP</span>
            </th>
            <th class="col-2 order-2" scope="col">&nbsp;</th>
        </tr>
    </script>

    <script type="text/html" id="rows">
        <tr>
            <td><span class="d-flex align-content-start" data-bind="text: new DateParser().parseDate(LoginTime, true).toString('yyyy-MM-dd HH:mm:ss')"></span></td>
            <td><span class="d-flex align-content-start" data-bind="text: IP"></span></td>
            <td></td>
        </tr>
    </script>
}

<div class="container">
    <h2 class="d-flex align-content-start">@LocaleResources.Views.LoginHistory.Index.Page</h2>
    <p class="d-flex align-content-start">@LocaleResources.Views.LoginHistory.Index.PageD</p>
</div>

@Controls.Grid.GridComposer.composeStandardActions(null, "", true)

@Controls.Grid.GridComposer.composeStandardListing(null, "")

@Controls.Grid.GridComposer.composeGrid(null, null, null, null, null, null, null, null, null, null)

@section Scripts {
    <script src="~/Scripts/ViewModels/LoginHistory.js" type="text/javascript"></script>
    <script type="text/javascript">

        var crudView = new CRUDView({
            'uri': '/myaccount/home',
            'observer': new CRUDObserver({ 'contentType': new LoginHistory({}), 'messages': intialize(new MessageRepository()) })
        });
        crudView.getObserverObject().setListSource(crudView);

        $(function () {

            ko.applyBindings(crudView.getObserverObject());

            crudView.find(1);
        });
    </script>
}