{ "Id":"Abstraction.Core.Controllers.CRUDController", "Scope":"public", "Constraint":"",  "Partial":"",  "Type":"class",  "Name":"CRUDController", "Description":"CRUDController extends ContentController and add support for content extraction, processing and saving using CRUD interface. CRUDController integrates with data repository through InterfaceRepository and perform create, read, update and delete operations and implements CRUD oriented action methods for serving get, post, create, update and delete web requests.", "Comments":"", "Annotations":"", "Constructs": { "Namespace": { "Type":"Library.Parsers.Constructs.Namespace", "Name":"Abstraction.Core.Controllers", "Description":"", "Comments":"" }, "Interfaces": [ "ContentController" ], "Constructors": [ { "Type":"", "Scope":"public", "Name":"CRUDController", "Arguments": [  ], "Description":"Constructor initialization.", "Params": [  ], "Comments":"", "Annotations":"" } ], "StaticConstructors": [  ], "Fields": [ { "Scope":"protected",  "Constraint": "", "Type": "DbContext", "Name":"DBContext", "Description":"", "Comments":"", "Annotations":"" },{ "Scope":"protected",  "Constraint": "", "Type": "InterfaceRepository<T>", "Name":"Repository", "Description":"", "Comments":"", "Annotations":"" },{ "Scope":"protected",  "Constraint": "", "Type": "ContentRepository<T>", "Name":"RepositoryContent", "Description":"", "Comments":"", "Annotations":"" },{ "Scope":"protected",  "Constraint": "", "Type": "bool", "Name":"SavedAlready", "Description":"", "Comments":"", "Annotations":"" } ], "Properties": [  ], "Methods": [ { "Scope":"protected", "Constraint": "virtual", "Type":"DbContext", "Name":"GetDBContext", "Arguments": [  ], "Description":"Gets reference to database context.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"ContentRepository<T>", "Name":"GetRepository", "Arguments": [  ], "Description":"Gets reference to content repository.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"InterfaceRepository<T>", "Name":"GetRepositoryInterface", "Arguments": [  ], "Description":"Gets interface to database repository.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"T", "Name":"PreCreate", "Arguments": [ { "Type": "T", "Name": "obj" } ], "Description":"Override to modify object before saving.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"T", "Name":"AttachAndSaveRelatedObjects", "Arguments": [ { "Type": "T", "Name": "obj" },{ "Type": "bool", "Name": "newEntity" } ], "Description":"Override to modify object with related objects before saving.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"T", "Name":"PostCreate", "Arguments": [ { "Type": "T", "Name": "obj" } ], "Description":"Override to modify saved object.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"T", "Name":"PostRead", "Arguments": [ { "Type": "T", "Name": "obj" } ], "Description":"Override to modify read object.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"List<T>", "Name":"PostRead", "Arguments": [ { "Type": "List<T>", "Name": "list" } ], "Description":"Override to modify read list.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"PagedRecords<T>", "Name":"postRead", "Arguments": [ { "Type": "PagedRecords<T>", "Name": "page" } ], "Description":"Override to modify list wise read records with count.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"List<T>", "Name":"PostSelect", "Arguments": [ { "Type": "List<T>", "Name": "list" } ], "Description":"Override to modify selected records list.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"PagedRecords<T>", "Name":"PostSelect", "Arguments": [ { "Type": "PagedRecords<T>", "Name": "page" } ], "Description":"Override to modify selected records list with count information.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"T", "Name":"PreUpdate", "Arguments": [ { "Type": "T", "Name": "obj" } ], "Description":"Override to modify object before update.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"T", "Name":"PostUpdate", "Arguments": [ { "Type": "T", "Name": "obj" } ], "Description":"Override to modify updated object.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"T", "Name":"PreDelete", "Arguments": [ { "Type": "T", "Name": "obj" } ], "Description":"Override to modify object before deletion.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"T", "Name":"PostDelete", "Arguments": [ { "Type": "T", "Name": "obj" } ], "Description":"Override to modify object after deletion. Usuall this only confirms that there were no errors.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"SearchFilter", "Name":"ReformSearchFilter", "Arguments": [ { "Type": "SearchFilter", "Name": "searchQuery" } ], "Description":"Override to modify the search criteria.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"JsonResult", "Name":"GetListJSONResult", "Arguments": [ { "Type": "List<T>", "Name": "results" },{ "Type": "string", "Name": "authorizationCode" } ], "Description":"Composes standard json result response object based list results.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"JsonResult", "Name":"GetListWiseJSONResult", "Arguments": [ { "Type": "PagedRecords<T>", "Name": "results" },{ "Type": "string", "Name": "authorizationCode" } ], "Description":"Composes standard json result response object based on page wise list results.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"public", "Constraint": "virtual", "Type":"JsonResult", "Name":"Select", "Arguments": [ { "Type": "[FromBody]SearchFilter", "Name": "searchQuery" } ], "Description":"Selects referential records list. Override to provide alternative records selection mechanism.", "Params": [  ], "Comments":"", "Annotations":"[HttpPost],[FromBody]" },{ "Scope":"public", "Constraint": "virtual", "Type":"JsonResult", "Name":"SelectList", "Arguments": [ { "Type": "[FromBody]SearchFilter", "Name": "searchQuery" } ], "Description":"Selects refential records list with count and number lists information. Override to provide alternative records selection mechanism.", "Params": [  ], "Comments":"", "Annotations":"[HttpPost],[FromBody]" },{ "Scope":"public", "Constraint": "virtual", "Type":"JsonResult", "Name":"ListAll", "Arguments": [  ], "Description":"Lists all records. Override to provide alternative records selection mechanism.", "Params": [  ], "Comments":"", "Annotations":"[HttpPost]" },{ "Scope":"public", "Constraint": "virtual", "Type":"JsonResult", "Name":"List", "Arguments": [ { "Type": "[FromBody]SearchFilter", "Name": "searchQuery" } ], "Description":"Lists criteria based records. Override to provide alternative records selction mechanism.", "Params": [  ], "Comments":"", "Annotations":"[HttpPost],[FromBody]" },{ "Scope":"public", "Constraint": "virtual", "Type":"JsonResult", "Name":"Find", "Arguments": [ { "Type": "[FromBody]", "Name": "SearchFilter" } ], "Description":"Find criteria based records list with count and number lists information. Override to provide alternative records selection mechanism.", "Params": [  ], "Comments":"", "Annotations":"[HttpPost],[FromBody]" },{ "Scope":"public", "Constraint": "virtual", "Type":"JsonResult", "Name":"Get", "Arguments": [ { "Type": "string", "Name": "id" } ], "Description":"Gets single record using GET method based on provided key or id value. Override to provide alternative record selection mechanism.", "Params": [  ], "Comments":"", "Annotations":"[HttpGet]" },{ "Scope":"public", "Constraint": "virtual", "Type":"JsonResult", "Name":"Post", "Arguments": [ { "Type": "[FromBody]SearchFilter", "Name": "searchQuery" } ], "Description":"Gets single record using POST method based on provided key or id value. Override to provide alternative record selection mechanism.", "Params": [  ], "Comments":"", "Annotations":"[HttpPost],[FromBody]" },{ "Scope":"public", "Constraint": "virtual", "Type":"JsonResult", "Name":"Create", "Arguments": [ { "Type": "[FromBody]T", "Name": "contentObject" } ], "Description":"Create (or Saves) new object. Override to provide alternative object creation or saving mechanism.", "Params": [  ], "Comments":"", "Annotations":"[HttpPost],[ValidateAntiForgeryToken],[FromBody]" },{ "Scope":"public", "Constraint": "virtual", "Type":"JsonResult", "Name":"Update", "Arguments": [ { "Type": "[FromBody]T", "Name": "contentObject" } ], "Description":"Updates (Saves) edited or modified object. Override to provide alternative object updating or saving mechanism.", "Params": [  ], "Comments":"", "Annotations":"[HttpPost],[ValidateAntiForgeryToken],[FromBody]" },{ "Scope":"public", "Constraint": "virtual", "Type":"JsonResult", "Name":"Delete", "Arguments": [ { "Type": "[FromBody]T", "Name": "contentObject" } ], "Description":"Deletes object. Override to provider alternative object deletion mechanism.", "Params": [  ], "Comments":"", "Annotations":"[HttpPost],[ValidateAntiForgeryToken],[FromBody]" },{ "Scope":"public", "Constraint": "virtual", "Type":"JsonResult", "Name":"FlexGet", "Arguments": [ { "Type": "String", "Name": "id" } ], "Description":"Gets FlexObject record using GET method based on provided key or id value. Override to provide alternative record selection mechanism.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"public", "Constraint": "virtual", "Type":"JsonResult", "Name":"FlexPost", "Arguments": [ { "Type": "[FromBody]SearchFilter", "Name": "searchQuery" } ], "Description":"Gets FlexObject record using POST method based on provided key or id value. Override to provide alternative record selection mechanism.", "Params": [  ], "Comments":"", "Annotations":"[HttpPost],[FromBody]" },{ "Scope":"public", "Constraint": "virtual", "Type":"JsonResult", "Name":"FlexList", "Arguments": [ { "Type": "string", "Name": "id" } ], "Description":"Lists records in a FlexObject. Override to provide alternative records selction mechanism.", "Params": [  ], "Comments":"", "Annotations":"[HttpGet]" },{ "Scope":"public", "Constraint": "virtual", "Type":"JsonResult", "Name":"FlexList", "Arguments": [ { "Type": "[FromBody]SearchFilter", "Name": "searchQuery" } ], "Description":"Lists records in a FlexObject. Override to provide alternative records selction mechanism.", "Params": [  ], "Comments":"", "Annotations":"[HttpPost],[FromBody]" },{ "Scope":"public", "Constraint": "virtual", "Type":"JsonResult", "Name":"FlexFind", "Arguments": [ { "Type": "[FromBody]SearchFilter", "Name": "searchQuery" } ], "Description":"Find and lists records in a FlexObject. Override to provide alternative records selction mechanism.", "Params": [  ], "Comments":"", "Annotations":"[HttpPost],[FromBody]" },{ "Scope":"public", "Constraint": "virtual", "Type":"JsonResult", "Name":"FlexSelect", "Arguments": [ { "Type": "[FromBody]SearchFilter", "Name": "searchQuery" } ], "Description":"Select and lists records in a FlexObject. Override to provide alternative records selction mechanism.", "Params": [  ], "Comments":"", "Annotations":"[HttpPost],[FromBody]" },{ "Scope":"public", "Constraint": "virtual", "Type":"JsonResult", "Name":"FlexSelectList", "Arguments": [ { "Type": "[FromBody]SearchFilter", "Name": "searchQuery" } ], "Description":"Selects list wise records in a FlexObject. Override to provide alternative records selction mechanism.", "Params": [  ], "Comments":"", "Annotations":"[HttpPost],[FromBody]" },{ "Scope":"protected", "Constraint": "virtual", "Type":"T", "Name":"SaveNewContent", "Arguments": [ { "Type": "T", "Name": "contentObject" },{ "Type": "string", "Name": "uploadType" },{ "Type": "string", "Name": "fileName" },{ "Type": "long", "Name": "size" },{ "Type": "MemoryStream", "Name": "fileStream" } ], "Description":"Override in controller application to save content object.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"T", "Name":"SaveExistingContent", "Arguments": [ { "Type": "T", "Name": "contentObject" },{ "Type": "string", "Name": "uploadType" },{ "Type": "string", "Name": "fileName" },{ "Type": "long", "Name": "size" },{ "Type": "MemoryStream", "Name": "fileStream" } ], "Description":"Override in controller application to save content object.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"private", "Constraint": "", "Type":"bool", "Name":"SaveFile", "Arguments": [ { "Type": "ref", "Name": "string" },{ "Type": "filename", "Name": "ref" },{ "Type": "long", "Name": "filesize" },{ "Type": "ref", "Name": "MemoryStream" } ], "Description":"Saves uploaded file.", "Params": [ { "Name": "filename", "Value": "filesize" } ], "Comments":"", "Annotations":"" },{ "Scope":"public", "Constraint": "virtual", "Type":"JsonResult", "Name":"CreateContent", "Arguments": [ { "Type": "[FromForm]T", "Name": "contentObject" } ], "Description":"Creates content information with reference content file.", "Params": [  ], "Comments":"", "Annotations":"[HttpPost],[FromForm]" },{ "Scope":"public", "Constraint": "virtual", "Type":"JsonResult", "Name":"UpdateContent", "Arguments": [ { "Type": "[FromForm]T", "Name": "contentObject" } ], "Description":"Updates content information with reference content file.", "Params": [  ], "Comments":"", "Annotations":"[HttpPost],[FromForm]" },{ "Scope":"protected", "Constraint": "", "Type":"List<ObjectError>", "Name":"GetModelStateErrors", "Arguments": [  ], "Description":"Gets posted request model object input errors list.", "Params": [  ], "Comments":"", "Annotations":"" } ], "InstanceFunctions": [  ], "Indexers": [  ], "Events": [  ], "Additionals": [ { "Title":"Important", "Description":"WindnTrees for .NET platform extend native.NET controller with BasicController, ContentController and CRUDController that are useful when writing a WindnTrees application. ", "Type":"AdditionalNote" } ], "ValueTypes": [  ], "Components": [] } }