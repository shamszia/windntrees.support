{ "Id":"Abstraction.Core.Repository.ContentRepository", "Scope":"public", "Constraint":"",  "Partial":"",  "Type":"class",  "Name":"ContentRepository", "Description":"ContentRepository extends from DataBaseRepository and implements InterfaceRepository for selected content type object that can be overridden in extended repository classes.", "Comments":"", "Annotations":"", "Constructs": { "Namespace": { "Type":"Library.Parsers.Constructs.Namespace", "Name":"Abstraction.Core.Repository", "Description":"", "Comments":"" }, "Interfaces": [ "DataBaseRepository,","InterfaceRepository" ], "Constructors": [  ], "StaticConstructors": [  ], "Fields": [  ], "Properties": [  ], "Methods": [ { "Scope":"protected", "Constraint": "virtual", "Type":"T", "Name":"PreCreate", "Arguments": [ { "Type": "T", "Name": "contentObject" } ], "Description":"Override to modify object before saving.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"T", "Name":"PostCreate", "Arguments": [ { "Type": "T", "Name": "contentObject" } ], "Description":"Override to modify saved object.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"T", "Name":"PostRead", "Arguments": [ { "Type": "T", "Name": "contentObject" } ], "Description":"Override to modify read object.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"List<T>", "Name":"PostRead", "Arguments": [ { "Type": "List<T>", "Name": "list" } ], "Description":"Override to modify read list.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"PagedRecords<T>", "Name":"PostRead", "Arguments": [ { "Type": "PagedRecords<T>", "Name": "page" } ], "Description":"Override to modify list wise read records with count.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"List<T>", "Name":"PostSelect", "Arguments": [ { "Type": "List<T>", "Name": "list" } ], "Description":"Override to modify selected records list.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"PagedRecords<T>", "Name":"PostSelect", "Arguments": [ { "Type": "PagedRecords<T>", "Name": "page" } ], "Description":"Override to modify selected records list with count information.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"T", "Name":"PreUpdate", "Arguments": [ { "Type": "T", "Name": "contentObject" } ], "Description":"Override to modify object before update.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"T", "Name":"PostUpdate", "Arguments": [ { "Type": "T", "Name": "contentObject" } ], "Description":"Override to modify updated object.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"T", "Name":"PreDelete", "Arguments": [ { "Type": "T", "Name": "contentObject" } ], "Description":"Override to modify object before deletion.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"protected", "Constraint": "virtual", "Type":"T", "Name":"PostDelete", "Arguments": [ { "Type": "T", "Name": "contentObject" } ], "Description":"Override to modify object after deletion. Usuall this only confirms that there were no errors.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"public", "Constraint": "virtual", "Type":"T", "Name":"Get", "Arguments": [ { "Type": "Object", "Name": "id" } ], "Description":"Gets object based on provided identification.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"public", "Constraint": "virtual", "Type":"T", "Name":"Post", "Arguments": [ { "Type": "SearchFilter", "Name": "searchQuery" } ], "Description":"Gets object based on provided search key.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"public", "Constraint": "virtual", "Type":"List<T>", "Name":"List", "Arguments": [ { "Type": "SearchFilter", "Name": "searchQuery" } ], "Description":"List content objects based on search filters.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"public", "Constraint": "virtual", "Type":"List<T>", "Name":"SelectList", "Arguments": [ { "Type": "SearchFilter", "Name": "searchQuery" } ], "Description":"Selects list of content objects based on search filters.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"public", "Constraint": "virtual", "Type":"List<T>", "Name":"ListAll", "Arguments": [  ], "Description":"List all content objects.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"public", "Constraint": "virtual", "Type":"PagedRecords<T>", "Name":"Select", "Arguments": [ { "Type": "SearchFilter", "Name": "searchQuery" } ], "Description":"Selects list of content objects based on search filters.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"public", "Constraint": "virtual", "Type":"PagedRecords<T>", "Name":"Find", "Arguments": [ { "Type": "SearchFilter", "Name": "searchQuery" } ], "Description":"Find page wise list of content objects based on search filters.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"public", "Constraint": "virtual", "Type":"T", "Name":"Create", "Arguments": [ { "Type": "T", "Name": "contentObject" } ], "Description":"Creates new content object.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"public", "Constraint": "virtual", "Type":"T", "Name":"Update", "Arguments": [ { "Type": "T", "Name": "contentObject" },{ "Type": "object", "Name": "id" } ], "Description":"Updates existing content object.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"public", "Constraint": "virtual", "Type":"T", "Name":"Delete", "Arguments": [ { "Type": "T", "Name": "contentObject" },{ "Type": "object", "Name": "id" } ], "Description":"Deletes existing content object.", "Params": [  ], "Comments":"", "Annotations":"" } ], "InstanceFunctions": [  ], "Indexers": [  ], "Events": [  ], "Additionals": [  ], "ValueTypes": [  ], "Components": [] } }