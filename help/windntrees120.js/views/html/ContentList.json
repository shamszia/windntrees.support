{ "Scope":"", "Constraint": "", "Type":"function", "Name":"ContentList", "Arguments": [ { "Name": "options", "Value": "" } ], "Description":"ContentList finds records based on input values and loads content video, image, subject and description values in provided html format and css styles. ContentList is capable of extracting information from a remote web service node's innerHTML content. In observer less scenario the type of content content, content node contentNode and error node errorNode must be defined. ContentList extends from ObjectView and for information about ObjectView visit here.", "Params": [  ], "Comments":"", "Annotations":"", "Constructs": { "Namespace": "", "Interfaces": [  ], "Constructors": [  ], "StaticConstructors": [  ], "Fields": [  ], "Properties": [  ], "Methods": [  ], "InstanceFunctions": [ { "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getType", "Arguments": [  ], "Description":"Gets type of view.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.clearRecords", "Arguments": [  ], "Description":"Clears(resets) observer records list and view.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.find", "Arguments": [ { "Name": "options", "Value": "" } ], "Description":"Find records based on provided keyword (via observer keyword property) and page number. if observer is not available then finds records based on options.keyword, options.size, options.page and options.fill.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getRecordComponent", "Arguments": [ { "Name": "record", "Value": "" } ], "Description":"Get component from record.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.presentView", "Arguments": [ { "Name": "options", "Value": "" } ], "Description":"Present view with input values and html format.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.presentErrors", "Arguments": [ { "Name": "event", "Value": "" },{ "Name": "eventData", "Value": "" } ], "Description":"Error processing and presenting event subscription.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.presentRecords", "Arguments": [ { "Name": "event", "Value": "" },{ "Name": "eventData", "Value": "" } ], "Description":"Multiple records processing and presenting event subscription.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.presentFailRequest", "Arguments": [ { "Name": "event", "Value": "" },{ "Name": "eventData", "Value": "" } ], "Description":"Presents request failure.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.subscribeEvents", "Arguments": [ { "Name": "eventsInstance", "Value": "" } ], "Description":"Subscribe CRUDProcessor events.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.unSubscribeEvents", "Arguments": [ { "Name": "eventsInstance", "Value": "" } ], "Description":"Subscribe CRUDProcessor events.", "Params": [  ], "Comments":"", "Annotations":"" } ], "Indexers": [  ], "Events": [  ], "Additionals": [  ], "ValueTypes": [  ], "Components": [] } }