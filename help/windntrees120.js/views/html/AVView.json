{ "Scope":"", "Constraint": "", "Type":"function", "Name":"AVView", "Arguments": [ { "Name": "options", "Value": "" } ], "Description":"AVView presents video, image, subject and description values in provided html format and css styles. AVView is capable of extracting information from a remote writing into node's innerHTML content. In observer less scenario the type of content content,content node contentNode and error node errorNode must be defined. crossorigin, poster, preload, autoplay, mediagroup, loop, muted, controls, width and height must be mapped with options.videosrcf, options.crossoriginf, options.posterf, options.preloadf, options.autoplayf, options.mediagroupf, options.loopf, options.mutedf, options.controlsf, options.widthf and options.heightf fields. If a response field results in null or undefined value then this can be replaced by opted value, for example src field can be provided with a default value like options.videosrc and crossorigin can be opted with options.crossorigin. AVView extends from ImageView and for information about ImageView visit here.", "Params": [  ], "Comments":"", "Annotations":"", "Constructs": { "Namespace": "", "Interfaces": [  ], "Constructors": [  ], "StaticConstructors": [  ], "Fields": [ { "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.VideoSrc", "Description":"Address of the resource.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.CrossOrigin", "Description":"How the element handles crossorigin requests.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.Poster", "Description":"Poster frame to show prior to video playback.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.Preload", "Description":"Hints how much buffering the media resource will likely need.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.Autoplay", "Description":"Hints that the media resource can be started automatically when the page is loaded.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.MediaGroup", "Description":"Groups media elements together with an implicit MediaController", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.Loop", "Description":"Replay video in loop.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.Muted", "Description":"Whether to mute the media resource by default.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.Controls", "Description":"Show user agent controls.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.VideoWidth", "Description":"Horizontal dimension.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.VideoHeight", "Description":"Vertical dimension.", "Comments":"", "Annotations":"" } ], "Properties": [  ], "Methods": [  ], "InstanceFunctions": [ { "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getType", "Arguments": [  ], "Description":"Gets the type of the function construct.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getVideoSrc", "Arguments": [  ], "Description":"Gets video source value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setVideoSrc", "Arguments": [ { "Name": "value", "Value": "" } ], "Description":"Sets video source value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getCrossOrigin", "Arguments": [  ], "Description":"Gets crossorigin value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setCrossOrigin", "Arguments": [ { "Name": "value", "Value": "" } ], "Description":"Sets crossorigin value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getPoster", "Arguments": [  ], "Description":"Gets poster value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setPoster", "Arguments": [ { "Name": "value", "Value": "" } ], "Description":"Sets poster value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getPreload", "Arguments": [  ], "Description":"Gets preload value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setPreload", "Arguments": [ { "Name": "value", "Value": "" } ], "Description":"Sets preload value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getAutoplay", "Arguments": [  ], "Description":"Gets autoplay value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setAutoplay", "Arguments": [ { "Name": "value", "Value": "" } ], "Description":"Sets autoplay value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getMediaGroup", "Arguments": [  ], "Description":"Gets mediagroup value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setMediaGroup", "Arguments": [ { "Name": "value", "Value": "" } ], "Description":"Sets mediagroup value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getLoop", "Arguments": [  ], "Description":"Gets loop value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setLoop", "Arguments": [ { "Name": "value", "Value": "" } ], "Description":"Sets loop value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getMuted", "Arguments": [  ], "Description":"Gets muted value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setMuted", "Arguments": [ { "Name": "value", "Value": "" } ], "Description":"Sets muted value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getControls", "Arguments": [  ], "Description":"Gets controls value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setControls", "Arguments": [ { "Name": "value", "Value": "" } ], "Description":"Sets controls value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getVideoWidth", "Arguments": [  ], "Description":"Gets width value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setVideoWidth", "Arguments": [ { "Name": "value", "Value": "" } ], "Description":"Sets width value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getVideoHeight", "Arguments": [  ], "Description":"Gets height value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setVideoHeight", "Arguments": [ { "Name": "value", "Value": "" } ], "Description":"Sets height value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.presentView", "Arguments": [ { "Name": "options", "Value": "" } ], "Description":"Present view with input values and html format.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.presentErrors", "Arguments": [ { "Name": "event", "Value": "" },{ "Name": "eventData", "Value": "" } ], "Description":"Error processing and presenting event subscription.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.presentRecord", "Arguments": [ { "Name": "event", "Value": "" },{ "Name": "eventData", "Value": "" } ], "Description":"Record processing and presenting event subscription.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.presentFailRequest", "Arguments": [ { "Name": "event", "Value": "" },{ "Name": "eventData", "Value": "" } ], "Description":"Presents request failure.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.subscribeEvents", "Arguments": [ { "Name": "eventsInstance", "Value": "" } ], "Description":"Subscribe CRUDProcessor events.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.unSubscribeEvents", "Arguments": [ { "Name": "eventsInstance", "Value": "" } ], "Description":"Subscribe CRUDProcessor events.", "Params": [  ], "Comments":"", "Annotations":"" } ], "Indexers": [  ], "Events": [  ], "Additionals": [  ], "ValueTypes": [  ], "Components": [] } }