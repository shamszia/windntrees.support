{ "Scope":"", "Constraint": "", "Type":"function", "Name":"ImageView", "Arguments": [ { "Name": "options", "Value": "" } ], "Description":"ImageView presents image, subject and description values in provided html format and css styles. ImageView is capable of extracting information from a remote writing into node's innerHTML content. In observer less scenario the type of content content, content node contentNode and error node errorNode must be defined. imagename, imagetitle and imagepath must be mapped with options.imagenamef, options.imagetitlef and options.imagepathf fields. If a response field results in null or undefined value then this can be replaced by opted value, for example imagetitle field can be provided with a default value like options.imagetitle. ImageView extends from TextView and for information about TextView visit here.", "Params": [  ], "Comments":"", "Annotations":"", "Constructs": { "Namespace": "", "Interfaces": [  ], "Constructors": [  ], "StaticConstructors": [  ], "Fields": [ { "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.ImageName", "Description":"Image name.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.ImagePath", "Description":"Image path.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.ImageTitle", "Description":"Image title.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.ImageWidth", "Description":"Horizontal dimension.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.ImageHeight", "Description":"Vertical dimension", "Comments":"", "Annotations":"" } ], "Properties": [  ], "Methods": [  ], "InstanceFunctions": [ { "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getType", "Arguments": [  ], "Description":"Gets the type of the function construct.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getImageName", "Arguments": [  ], "Description":"Gets image name.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setImageName", "Arguments": [ { "Name": "value", "Value": "" } ], "Description":"Sets image name value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getImagePath", "Arguments": [  ], "Description":"Gets image path.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setImagePath", "Arguments": [ { "Name": "value", "Value": "" } ], "Description":"Sets image path value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getImageTitle", "Arguments": [  ], "Description":"Gets image title.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setImageTitle", "Arguments": [ { "Name": "value", "Value": "" } ], "Description":"Sets image title value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getImageWidth", "Arguments": [  ], "Description":"Gets width value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setImageWidth", "Arguments": [ { "Name": "value", "Value": "" } ], "Description":"Sets width value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getImageHeight", "Arguments": [  ], "Description":"Gets height value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setImageHeight", "Arguments": [ { "Name": "value", "Value": "" } ], "Description":"Sets height value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.presentView", "Arguments": [ { "Name": "options", "Value": "" } ], "Description":"Present view with input values and html format.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.presentErrors", "Arguments": [ { "Name": "event", "Value": "" },{ "Name": "eventData", "Value": "" } ], "Description":"Error processing and presenting event subscription.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.presentRecord", "Arguments": [ { "Name": "event", "Value": "" },{ "Name": "eventData", "Value": "" } ], "Description":"Record processing and presenting event subscription.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.presentFailRequest", "Arguments": [ { "Name": "event", "Value": "" },{ "Name": "eventData", "Value": "" } ], "Description":"Presents request failure.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.subscribeEvents", "Arguments": [ { "Name": "eventsInstance", "Value": "" } ], "Description":"Subscribe CRUDProcessor events.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.unSubscribeEvents", "Arguments": [ { "Name": "eventsInstance", "Value": "" } ], "Description":"Subscribe CRUDProcessor events.", "Params": [  ], "Comments":"", "Annotations":"" } ], "Indexers": [  ], "Events": [  ], "Additionals": [  ], "ValueTypes": [  ], "Components": [] } }