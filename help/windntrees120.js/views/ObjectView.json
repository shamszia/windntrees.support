{ "Scope":"", "Constraint": "", "Type":"function", "Name":"ObjectView", "Arguments": [ { "Name": "options", "Value": "" } ], "Description":"ObjectView provides observer independent data handling and communication capability using GET or POST calls to a hosted web service and is able to produce typed content objects based on provided content type. ObjectView is extract and present only CRUD component that means its useful when information or data is only required for extraction and presentation in textual or form format.", "Params": [  ], "Comments":"", "Annotations":"", "Constructs": { "Namespace": "", "Interfaces": [  ], "Constructors": [  ], "StaticConstructors": [  ], "Fields": [ { "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.Name", "Description":"View name.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.Title", "Description":"View title.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.Options", "Description":"View options.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.Key", "Description":"View key.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.ObjectKey", "Description":"View object key.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.KeyField", "Description":"View key field.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.Objects", "Description":"View objects.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.URI", "Description":"View uri.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.ViewScope", "Description":"View scope.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.ContentProcessor", "Description":"Content processor attached with view.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.ContentType", "Description":"Content type attached with view.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.Observer", "Description":"Observer attached with view.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.CRUDContextPath", "Description":"Context path extracted from uri.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.MessageRepository", "Description":"Message repository attached with view.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.Fields", "Description":"Fields for runtime extensions.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.Views", "Description":"List of referential or dependent views.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.ListCounter", "Description":"List counter for synchronizing post list updates changes.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.AuthorizationCode", "Description":"Supported field for authorization code.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.ContentNode", "Description":"Reference to document component node in DOM tree.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.ErrorNode", "Description":"Reference to document error node in DOM tree.", "Comments":"", "Annotations":"" } ], "Properties": [  ], "Methods": [  ], "InstanceFunctions": [ { "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getType", "Arguments": [  ], "Description":"Gets type of function construct.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setName", "Arguments": [ { "Name": "name", "Value": "" } ], "Description":"Sets CRUD user friendly name.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getName", "Arguments": [  ], "Description":"Gets CRUD user friendly name.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setTitle", "Arguments": [ { "Name": "title", "Value": "" } ], "Description":"Sets CRUD title.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getTitle", "Arguments": [  ], "Description":"Gets CRUD title.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getOptions", "Arguments": [  ], "Description":"Get object options.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getKey", "Arguments": [  ], "Description":"Gets view key.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getObjectKey", "Arguments": [  ], "Description":"Gets object key.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setObjectKey", "Arguments": [ { "Name": "value", "Value": "" } ], "Description":"Sets object key value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getKeyField", "Arguments": [  ], "Description":"Gets key field name.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setKeyField", "Arguments": [ { "Name": "value", "Value": "" } ], "Description":"Sets key field name.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setObjects", "Arguments": [ { "Name": "value", "Value": "" } ], "Description":"Sets reference objects for observer synchronization.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getObjects", "Arguments": [  ], "Description":"Gets reference objects for observer synchronization.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getContentType", "Arguments": [  ], "Description":"Gets content type value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setContentType", "Arguments": [ { "Name": "value", "Value": "" } ], "Description":"Sets content type value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getAuthorizationCode", "Arguments": [  ], "Description":"Gets authorization code.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setAuthorizationCode", "Arguments": [ { "Name": "value", "Value": "" } ], "Description":"Sets authorization code.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getCRUDProcessor", "Arguments": [  ], "Description":"Gets CRUDProcessor", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getURI", "Arguments": [  ], "Description":"Gets URI.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setViewScope", "Arguments": [ { "Name": "value", "Value": "" } ], "Description":"Sets view scope.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getViewScope", "Arguments": [  ], "Description":"Gets view scope.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.processing", "Arguments": [  ], "Description":"Request processing status.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.responseData", "Arguments": [  ], "Description":"Response data result.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.isResponseError", "Arguments": [  ], "Description":"Response error status.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.responseError", "Arguments": [  ], "Description":"Response error.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.isInputError", "Arguments": [  ], "Description":"Input error status.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getErrors", "Arguments": [  ], "Description":"Input errors list.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setContentNode", "Arguments": [ { "Name": "value", "Value": "" } ], "Description":"Sets content node id.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getErrorNode", "Arguments": [  ], "Description":"Gets error node id.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setErrorNode", "Arguments": [ { "Name": "value", "Value": "" } ], "Description":"Sets error node id.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getObserverInterface", "Arguments": [  ], "Description":"Observer interface.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.synchronizeScript", "Arguments": [ { "Name": "options", "Value": "" } ], "Description":"Synchronize or excute provided script within a specific context.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getObserverObject", "Arguments": [ { "Name": "options", "Value": "" } ], "Description":"Gets observer object.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getContentTypeObjects", "Arguments": [ { "Name": "options", "Value": "" } ], "Description":"Gets concrete (or typed) content objects based on content type information.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getContextPath", "Arguments": [  ], "Description":"Gets uri context path.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getMessageRepository", "Arguments": [  ], "Description":"Gets message repository.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getListCounter", "Arguments": [  ], "Description":"Gets instance list counter value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setReferentialViews", "Arguments": [ { "Name": "views", "Value": "" } ], "Description":"Sets referential views.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getReferentialViews", "Arguments": [  ], "Description":"Gets referential views.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getReferentialView", "Arguments": [ { "Name": "key", "Value": "" } ], "Description":"Gets referential view based on key value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.loadContextPath", "Arguments": [  ], "Description":"Gets CRUD's context path.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.clearRecord", "Arguments": [  ], "Description":"Clears(or Resets) observer records list.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.get", "Arguments": [ { "Name": "key", "Value": "" } ], "Description":"Gets record based on key value using GET method.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.post", "Arguments": [ { "Name": "key", "Value": "" } ], "Description":"Gets record based on key value via POST method.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.load", "Arguments": [ { "Name": "options", "Value": "" } ], "Description":"Loads view and related lists.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.loadListResult", "Arguments": [ { "Name": "options", "Value": "" } ], "Description":"Loads and place result within referenced variable.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.formatContent", "Arguments": [ { "Name": "options", "Value": "" } ], "Description":"Formats content objects by escaping time fields.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.ExtendField", "Arguments": [ { "Name": "options", "Value": "" } ], "Description":"Extends field within observer object.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.ExtendFields", "Arguments": [ { "Name": "options", "Value": "" } ], "Description":"Extend fields within observer object.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.LoadFields", "Arguments": [ { "Name": "options", "Value": "" } ], "Description":"Loads related fields.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.ProcessFieldResponse", "Arguments": [ { "Name": "data", "Value": "" },{ "Name": "scopeObject", "Value": "" } ], "Description":"Processes and present field response.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.extendContentMethods", "Arguments": [ { "Name": "functionOptions", "Value": "" } ], "Description":"Extends content type object with get, getKey and newObject.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.notify", "Arguments": [ { "Name": "eventData", "Value": "" } ], "Description":"Notify event subscribers with event information.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.presentErrors", "Arguments": [ { "Name": "event", "Value": "" },{ "Name": "eventData", "Value": "" } ], "Description":"Error processing and presenting event subscription.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.presentRecord", "Arguments": [ { "Name": "event", "Value": "" },{ "Name": "eventData", "Value": "" } ], "Description":"Record processing and presenting event subscription.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.presentFailRequest", "Arguments": [ { "Name": "event", "Value": "" },{ "Name": "eventData", "Value": "" } ], "Description":"Presents request failure.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.subscribeCRUDProcessorEvent", "Arguments": [ { "Name": "event", "Value": "" },{ "Name": "callback", "Value": "" } ], "Description":"Subscribes for a CRUDProcessor event.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.unSubscribeCRUDProcessorEvent", "Arguments": [ { "Name": "event", "Value": "" },{ "Name": "callback", "Value": "" } ], "Description":"Subscribes off for a CRUDProcessor event.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.subscribeEvent", "Arguments": [ { "Name": "event", "Value": "" },{ "Name": "callback", "Value": "" } ], "Description":"Subscribes for a view event.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.unSubscribeEvent", "Arguments": [ { "Name": "event", "Value": "" },{ "Name": "callback", "Value": "" } ], "Description":"Subscribes off for a view event.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.subscribeEvents", "Arguments": [ { "Name": "eventsInstance", "Value": "" } ], "Description":"Subscribe CRUDProcessor events.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.unSubscribeEvents", "Arguments": [ { "Name": "eventsInstance", "Value": "" } ], "Description":"UnSubscribe CRUDProcessor events.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.displayProgress", "Arguments": [ { "Name": "event", "Value": "" },{ "Name": "eventData", "Value": "" } ], "Description":"Record processing and presenting event subscription.", "Params": [  ], "Comments":"", "Annotations":"" } ], "Indexers": [  ], "Events": [  ], "Additionals": [  ], "ValueTypes": [  ], "Components": [] } }