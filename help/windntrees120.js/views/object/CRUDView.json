{ "Scope":"", "Constraint": "", "Type":"function", "Name":"CRUDView", "Arguments": [ { "Name": "options", "Value": "" } ], "Description":"CRUDView provides observer independent data handling and communication capability using get, post, find, create, update and delete calls to a hosted web service and gets typed content objects. CRUDView extends functionality from SearchView. CRUDView is data or information extraction, edition, deletion, saving and presentation CRUD component, this means its useful when information or data is required to be created, edited, saved, searched and presented in textual, form or grid (tabular) format. CRUDView extends from SearchView and for information about SearchView visit here.", "Params": [  ], "Comments":"", "Annotations":"", "Constructs": { "Namespace": "", "Interfaces": [  ], "Constructors": [  ], "StaticConstructors": [  ], "Fields": [ { "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.MasterView", "Description":"Reference to master view.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.DetailView", "Description":"Reference to detail view.", "Comments":"", "Annotations":"" } ], "Properties": [  ], "Methods": [  ], "InstanceFunctions": [ { "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getType", "Arguments": [  ], "Description":"Gets the type of view.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getMasterObserverInterface", "Arguments": [  ], "Description":"Observer interface reference to the actual observer.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getMasterObserverObject", "Arguments": [  ], "Description":"Gets view's actual underlying observer.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getDetailObserverInterface", "Arguments": [  ], "Description":"Observer interface reference to the actual observer.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getDetailObserverObject", "Arguments": [  ], "Description":"Gets view's actual underlying observer.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setMasterView", "Arguments": [ { "Name": "view", "Value": "" } ], "Description":"Sets master view.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getMasterView", "Arguments": [  ], "Description":"Gets master view.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setDetailView", "Arguments": [ { "Name": "view", "Value": "" } ], "Description":"Sets related detail view.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getDetailView", "Arguments": [  ], "Description":"Gets related detail view.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.setMasterKeyRecord", "Arguments": [ { "Name": "record", "Value": "" } ], "Description":"Sets master key record.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getMasterKeyRecord", "Arguments": [  ], "Description":"Gets master key record.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getContextualMasterKeyRecord", "Arguments": [  ], "Description":"Gets master key record.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.formatContent", "Arguments": [ { "Name": "options", "Value": "" } ], "Description":"Format the content object time fields.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.evaluateOption", "Arguments": [ { "Name": "field", "Value": "" } ], "Description":"Evaluates field against form content object.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.create", "Arguments": [ { "Name": "options", "Value": "" } ], "Description":"Creates new record based on form view object.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.update", "Arguments": [ { "Name": "options", "Value": "" } ], "Description":"Updates new record based on form view object.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.delete", "Arguments": [ { "Name": "options", "Value": "" } ], "Description":"Deletes exisiting record based on provided record.", "Params": [  ], "Comments":"", "Annotations":"" } ], "Indexers": [  ], "Events": [  ], "Additionals": [  ], "ValueTypes": [  ], "Components": [] } }