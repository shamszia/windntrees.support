{ "Scope":"", "Constraint": "", "Type":"function", "Name":"CRUDProcessor", "Arguments": [ { "Name": "options", "Value": "" } ], "Description":"CRUDProcessor processes response data and errors returned by CRUDController and produces content and or error object(s). Returned objects are consumed by other components for further processing. For example, views utilize objects for presentation. Usually a CRUDProcessor deals with a CRUDController, a CRUDSource and or a CRUDConsumer.", "Params": [  ], "Comments":"", "Annotations":"", "Constructs": { "Namespace": "", "Interfaces": [  ], "Constructors": [  ], "StaticConstructors": [  ], "Fields": [ { "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.Key", "Description":"Key is a unique identifier to differentiate between CRUDProcessor.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.Controller", "Description":"CRUDController resposible for extracting response objects.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.Record", "Description":"Recently extracted response object.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.Records", "Description":"Recently extracted list of response objects.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.Errors", "Description":"Recently extracted list of response errors.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.ProcessingState", "Description":"Processing event information.", "Comments":"", "Annotations":"" },{ "Scope":"",  "Constraint": "", "Type": "", "Name":"instance.ProcessingStatus", "Description":"Processing status.", "Comments":"", "Annotations":"" } ], "Properties": [  ], "Methods": [  ], "InstanceFunctions": [ { "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getType", "Arguments": [  ], "Description":"Gets type of function construct.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getKey", "Arguments": [  ], "Description":"Gets unique identification key value.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getController", "Arguments": [  ], "Description":"Gets CRUDController linked with CRUDProcessor.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.responseData", "Arguments": [  ], "Description":"Requested response data.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.responseError", "Arguments": [  ], "Description":"Response errors.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.isResponseError", "Arguments": [  ], "Description":"Checks response for error.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.isInputError", "Arguments": [  ], "Description":"Checks response for input errors.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getProcessingStatus", "Arguments": [  ], "Description":"Gets request processing status.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getProcessingState", "Arguments": [  ], "Description":"Gets in process request state.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getErrors", "Arguments": [  ], "Description":"Gets list of errors.Note that list of errors is only available when request has been completed and processed.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getRecord", "Arguments": [  ], "Description":"Gets processed record.Note that record is only available when the request has been completed and processed.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getRecords", "Arguments": [  ], "Description":"Gets processed records.Note that records are only available when request has been completed and processed.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.getContextPath", "Arguments": [ { "Name": "data", "Value": "" } ], "Description":"Gets server side context path for requested URI.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.get", "Arguments": [ { "Name": "data", "Value": "" } ], "Description":"Extracts data object by key from the specified URI.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.post", "Arguments": [ { "Name": "data", "Value": "" } ], "Description":"Extracts data object by composite key from the specified URI.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.select", "Arguments": [ { "Name": "data", "Value": "" } ], "Description":"Extracts paged list of data objects referenced by key and or a keyword from specified URI.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.selectList", "Arguments": [ { "Name": "data", "Value": "" } ], "Description":"Extracts paged list of data objects referenced by key and or a keyword from specified URI.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.find", "Arguments": [ { "Name": "data", "Value": "" } ], "Description":"Extracts paged list of data objects referenced by keyword from specified URI.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.list", "Arguments": [ { "Name": "data", "Value": "" } ], "Description":"Extracts list of data objects referenced by keyword from specified URI.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.listAll", "Arguments": [ { "Name": "data", "Value": "" } ], "Description":"Extracts list of data objects from specified URI.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.create", "Arguments": [ { "Name": "data", "Value": "" } ], "Description":"Saves new content object and processes response.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.update", "Arguments": [ { "Name": "data", "Value": "" } ], "Description":"Saves existing content object and processes response.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.delete", "Arguments": [ { "Name": "data", "Value": "" } ], "Description":"Delete existing content object and processes response.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.processRecord", "Arguments": [ { "Name": "eventData", "Value": "" } ], "Description":"Extracted and processed record data object in response to create, update and delete request calls.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.processRecords", "Arguments": [ { "Name": "eventData", "Value": "" } ], "Description":"Extracted and processed list of record data objects in response to select, selectList, find, list and listAll.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.notify", "Arguments": [ { "Name": "eventData", "Value": "" } ], "Description":"Notifies event subscribers with event information.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.beforeRequest", "Arguments": [ { "Name": "event", "Value": "" },{ "Name": "eventData", "Value": "" } ], "Description":"Processes request data before making request call.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.afterRequest", "Arguments": [ { "Name": "event", "Value": "" },{ "Name": "eventData", "Value": "" } ], "Description":"Processes response data after making request call.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.failRequest", "Arguments": [ { "Name": "event", "Value": "" },{ "Name": "eventData", "Value": "" } ], "Description":"Processes response error after making request call.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.subscribeCRUDControllerEvent", "Arguments": [ { "Name": "event", "Value": "" },{ "Name": "callback", "Value": "" } ], "Description":"Subscribes CRUDController events for processing.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.unSubscribeCRUDControllerEvent", "Arguments": [ { "Name": "event", "Value": "" },{ "Name": "callback", "Value": "" } ], "Description":"Unsubscribes CRUDController events for processing.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.subscribeEvents", "Arguments": [ { "Name": "eventsInstance", "Value": "" } ], "Description":"Subscribes CRUDController events with events instance.", "Params": [  ], "Comments":"", "Annotations":"" },{ "Scope":"", "Constraint": "", "Type":"", "Name":"instance.unSubscribeEvents", "Arguments": [ { "Name": "eventsInstance", "Value": "" } ], "Description":"Unsubscribes CRUDController events with events instance.", "Params": [  ], "Comments":"", "Annotations":"" } ], "Indexers": [  ], "Events": [  ], "Additionals": [  ], "ValueTypes": [  ], "Components": [] } }